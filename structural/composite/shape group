// Component interface
interface Shape {
    void draw();
}

// Leaf class
class Circle implements Shape {
    @Override
    public void draw() {
        System.out.println("Drawing a Circle");
    }
}

// Leaf class
class Rectangle implements Shape {
    @Override
    public void draw() {
        System.out.println("Drawing a Rectangle");
    }
}

// Composite class
class ShapeGroup implements Shape {
    private List<Shape> shapes = new ArrayList<>();

    public void addShape(Shape shape) {
        shapes.add(shape);
    }

    public void removeShape(Shape shape) {
        shapes.remove(shape);
    }

    @Override
    public void draw() {
        System.out.println("Drawing a Group of Shapes");
        for (Shape shape : shapes) {
            shape.draw();
        }
    }
}

// Usage
public class Main {
    public static void main(String[] args) {
        // Leaf nodes
        Shape circle = new Circle();
        Shape rectangle = new Rectangle();

        // Composite node
        ShapeGroup group = new ShapeGroup();
        group.addShape(circle);
        group.addShape(rectangle);

        // Drawing individual and composite shapes
        group.draw();
    }
}
