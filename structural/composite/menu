// Component interface
interface MenuItem {
    void display();
}

// Leaf class
class FoodItem implements MenuItem {
    private String name;
    private double price;

    public FoodItem(String name, double price) {
        this.name = name;
        this.price = price;
    }

    @Override
    public void display() {
        System.out.println("Food Item: " + name + ", Price: $" + price);
    }
}

// Composite class
class ComboMeal implements MenuItem {
    private String name;
    private List<MenuItem> items = new ArrayList<>();

    public ComboMeal(String name) {
        this.name = name;
    }

    public void addItem(MenuItem item) {
        items.add(item);
    }

    public void removeItem(MenuItem item) {
        items.remove(item);
    }

    @Override
    public void display() {
        System.out.println("Combo Meal: " + name);
        for (MenuItem item : items) {
            item.display();
        }
    }
}

// Usage
public class Main {
    public static void main(String[] args) {
        // Leaf nodes
        MenuItem burger = new FoodItem("Burger", 5.99);
        MenuItem fries = new FoodItem("Fries", 2.99);
        MenuItem drink = new FoodItem("Soda", 1.99);

        // Composite node
        ComboMeal combo = new ComboMeal("Lunch Combo");
        combo.addItem(burger);
        combo.addItem(fries);
        combo.addItem(drink);

        // Display combo meal and individual items
        combo.display();
    }
}
