abstract class Beverage {
    // Template method
    public final void prepareRecipe() {
        boilWater();
        brew();
        pourInCup();
        addCondiments();
    }

    // Common methods
    private void boilWater() {
        System.out.println("Boiling water...");
    }

    private void pourInCup() {
        System.out.println("Pouring into cup...");
    }

    // Abstract methods to be implemented by subclasses
    protected abstract void brew();
    protected abstract void addCondiments();
}

class Tea extends Beverage {
    @Override
    protected void brew() {
        System.out.println("Steeping the tea...");
    }

    @Override
    protected void addCondiments() {
        System.out.println("Adding lemon...");
    }
}
class Coffee extends Beverage {
    @Override
    protected void brew() {
        System.out.println("Dripping coffee through filter...");
    }

    @Override
    protected void addCondiments() {
        System.out.println("Adding sugar and milk...");
    }
}
public class Main {
    public static void main(String[] args) {
        Beverage tea = new Tea();
        System.out.println("Preparing tea...");
        tea.prepareRecipe();
        
        System.out.println("\nPreparing coffee...");
        Beverage coffee = new Coffee();
        coffee.prepareRecipe();
    }
}

// output

Preparing tea...
Boiling water...
Steeping the tea...
Pouring into cup...
Adding lemon...

Preparing coffee...
Boiling water...
Dripping coffee through filter...
Pouring into cup...
Adding sugar and milk...
