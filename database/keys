In SQL, keys are fundamental components of relational databases, serving to uniquely identify rows within a table and establish 
relationships between tables. They are crucial for maintaining data integrity and enabling efficient data retrieval. 
Here are the main types of keys in SQL:

Primary Key:
A column or set of columns that uniquely identifies each row in a table. It cannot contain NULL values and must be unique for every record.
Each table can have only one primary key.

Foreign Key:
A column or set of columns in one table (the "child" table) that refers to the primary key in another table (the "parent" table). 
Foreign keys establish relationships between tables and enforce referential integrity, ensuring data consistency.

Unique Key:
Similar to a primary key in that it enforces uniqueness for the column(s) it's applied to, but unlike a primary key, it can allow one NULL 
value. A table can have multiple unique keys.

Candidate Key:
Any column or set of columns that can uniquely identify a row in a table. All candidate keys are super keys, but not all super keys are 
candidate keys.

Super Key:
A column or set of columns that can uniquely identify a row in a table, potentially containing redundant attributes. All candidate keys 
are super keys.

Alternate Key:
A candidate key that is not chosen to be the primary key. 

Composite Key:
A candidate key that consists of two or more columns whose combined values uniquely identify each row in a table.

Surrogate Key:
An artificial key, typically an integer, that is generated by the database system and has no business meaning.
It is used to uniquely identify rows when natural keys are complex or prone to change.

